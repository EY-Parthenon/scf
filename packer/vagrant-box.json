{
    "variables": {
        "version": "2.0.14",
        "vm_name": "scf-vagrant",
        "ssh_username": "vagrant",
        "ssh_password": "vagrant",
        "iso_url": "http://download.opensuse.org/distribution/leap/15.0/iso/openSUSE-Leap-15.0-NET-x86_64.iso",
        "iso_checksum": "1a322de7c215da96fdbad4c247d218eb79073c5620a332a759c0291b44746fbc",
        "iso_checksum_type": "sha256",
        "aws_region": "eu-central-1",
        "aws_instance_type": "m5d.xlarge",
        "aws_spot_price": "0.398",
        "http_directory": "http",
        "ssh_wait_timeout": "300m",
        "source_machine_package": "{{ env `SOURCE_MACHINE_PACKAGE` }}",
        "source_machine_image": "{{ env `SOURCE_MACHINE_IMAGE` }}",
        "ssh_private_key_file": "{{ env `SSH_PRIVATE_KEY_FILE` }}",
        "triton_account": "{{ env `TRITON_ACCOUNT` }}",
        "triton_key_id": "{{ env `TRITON_KEY_ID` }}",
        "triton_url": "{{ env `TRITON_URL` }}",
        "shutdown_command": "echo vagrant | sudo -S shutdown -P now"
    },
    "builders": [
        {
            "name": "vagrant-vmware",
            "type": "vmware-iso",
            "headless": true,
            "vm_name": "{{user `vm_name`}}+{{isotime \"20060102-1504\"}}",
            "guest_os_type": "suse-64",
            "disk_size": 120480,
            "ssh_username": "{{user `ssh_username`}}",
            "ssh_password": "{{user `ssh_password`}}",
            "iso_url": "{{user `iso_url`}}",
            "iso_checksum": "{{user `iso_checksum`}}",
            "iso_checksum_type": "{{user `iso_checksum_type`}}",
            "http_directory": "{{user `http_directory`}}",
            "tools_upload_flavor": "linux",
            "ssh_wait_timeout": "{{user `ssh_wait_timeout`}}",
            "shutdown_command": "{{user `shutdown_command`}}",
            "boot_command": [
                "<esc><enter><wait>",
                "linux lang=en_US textmode=1 ",
                "biosdevname=0 net.ifnames=0 netdevice=eth0 netsetup=dhcp ",
                "autoyast=http://{{ .HTTPIP }}:{{ .HTTPPort }}/vagrant-autoyast.xml ",
                "<enter><wait>"
            ],
            "vmx_data": {
                "memsize": "1024"
            }
        },
        {
            "name": "vagrant-virtualbox",
            "type": "virtualbox-iso",
            "headless": true,
            "vm_name": "{{user `vm_name`}}+{{isotime \"20060102-1504\"}}",
            "guest_os_type": "OpenSUSE_64",
            "guest_additions_mode": "disable",
            "disk_size": 120480,
            "hard_drive_interface": "sata",
            "hard_drive_nonrotational": true,
            "hard_drive_discard": true,
            "ssh_username": "{{user `ssh_username`}}",
            "ssh_password": "{{user `ssh_password`}}",
            "iso_url": "{{user `iso_url`}}",
            "iso_checksum": "{{user `iso_checksum`}}",
            "iso_checksum_type": "{{user `iso_checksum_type`}}",
            "http_directory": "{{user `http_directory`}}",
            "ssh_wait_timeout": "{{user `ssh_wait_timeout`}}",
            "shutdown_command": "{{user `shutdown_command`}}",
            "vboxmanage": [
                [ "modifyvm", "{{.Name}}", "--memory", "2048" ]
            ],
            "boot_command": [
                "<esc><enter><wait>",
                "linux lang=en_US textmode=1 ",
                "vga=0x345 ",
                "biosdevname=0 netsetup=dhcp ",
                "autoyast=http://{{ .HTTPIP }}:{{ .HTTPPort }}/vagrant-autoyast.xml ",
                "<enter><wait>"
            ]
        },
        {
            "name": "vagrant-libvirt",
            "type": "qemu",
            "headless": true,
            "vm_name": "{{user `vm_name`}}+{{isotime \"20060102-1504\"}}",
            "disk_discard": "unmap",
            "disk_size": 120480,
            "disk_interface": "virtio-scsi",
            "disk_compression": true,
            "net_device": "virtio-net",
            "ssh_username": "{{user `ssh_username`}}",
            "ssh_password": "{{user `ssh_password`}}",
            "ssh_wait_timeout": "{{user `ssh_wait_timeout`}}",
            "iso_url": "{{user `iso_url`}}",
            "iso_checksum": "{{user `iso_checksum`}}",
            "iso_checksum_type": "{{user `iso_checksum_type`}}",
            "http_directory": "{{user `http_directory`}}",
            "shutdown_command": "{{user `shutdown_command`}}",
            "qemuargs": [
                [ "-m", "2048M" ]
            ],
            "boot_command": [
                "<esc><enter><wait>",
                "linux lang=en_US textmode=1 ",
                "biosdevname=0 net.ifnames=0 netdevice=eth0 netsetup=dhcp ",
                "autoyast=http://{{ .HTTPIP }}:{{ .HTTPPort }}/vagrant-autoyast.xml ",
                "<enter><wait>"
            ]
        },
        {
            "name": "scf-cached-libvirt",
            "type": "qemu",

            "vm_name": "scf-vm+{{isotime \"20060102-1504\"}}",
            "ssh_username": "{{user `ssh_username`}}",
            "ssh_password": "{{user `ssh_password`}}",
            "shutdown_command": "echo {{user `ssh_password`}} | sudo -S shutdown -P now",

            "headless": true,
            "disk_size": 120480,
            "disk_interface": "virtio",
            "disk_compression": true,
            "net_device": "virtio-net",
            "ssh_wait_timeout": "{{user `ssh_wait_timeout`}}",
            "iso_url": "{{user `iso_url`}}",
            "iso_checksum": "{{user `iso_checksum`}}",
            "iso_checksum_type": "{{user `iso_checksum_type`}}",
            "http_directory": "{{user `http_directory`}}",
            "qemuargs": [
                [ "-m", "2048M" ]
            ],
            "boot_command": [
                "<esc><enter><wait>",
                "linux lang=en_US textmode=1 ",
                "biosdevname=0 net.ifnames=0 netdevice=eth0 netsetup=dhcp ",
                "autoyast=http://{{ .HTTPIP }}:{{ .HTTPPort }}/scf-autoyast.xml ",
                "<enter><wait>"
            ]
        },
        {
            "name": "jenkins-slave",
            "type": "triton",
            "image_name": "{{ user `vm_name` }}",
            "image_version": "{{ user `version` }}+{{isotime \"20060102-1504\"}}",
            "source_machine_image": "{{ user `source_machine_image` }}",
            "source_machine_package": "{{ user `source_machine_package` }}",
            "ssh_private_key_file": "{{ user `ssh_private_key_file` }}",
            "ssh_username": "root",
            "triton_account": "{{ user `triton_account` }}",
            "triton_key_id": "{{ user `triton_key_id` }}",
            "triton_key_material": "{{ user `ssh_private_key_file` }}",
            "triton_url": "{{ user `triton_url` }}"
        },
        {
            "name": "aws-slave",
            "type": "amazon-ebs",
            "ami_name": "{{ user `vm_name` }}-{{ user `version` }}-{{ isotime \"20060102-1504\" }}",
            "instance_type": "{{ user `aws_instance_type` }}",
            "region": "{{ user `aws_region` }}",
            "ami_description": "CAP Jenkins slave",
            "ami_virtualization_type": "hvm",
            "availability_zone": "{{ user `aws_region` }}a",
            "ebs_optimized": true,
            "shutdown_behavior": "terminate",
            "source_ami_filter": {
                "filters": {
                    "virtualization-type": "hvm",
                    "name": "suse-sles-12-sp3-*-hvm-ssd-x86_64",
                    "root-device-type": "ebs"
                },
                "owners": ["013907871322"],
                "most_recent": true
            },
            "spot_price": "{{ user `aws_spot_price` }}",
            "ssh_username": "ec2-user",
            "ssh_keypair_name": "jenkins-slave",
            "ssh_agent_auth": true
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "only": ["jenkins-slave"],
            "inline": [
                "# Create vagrant user",
                "useradd --create-home vagrant",
                "echo vagrant:vagrant | chpasswd",
                "# Enable swap accounting",
                "perl -p -i -e 's@^(GRUB_CMDLINE_LINUX_DEFAULT)=\"(.*)\"@$1=\"$2 swapaccount=1\"@' /etc/default/grub",
                "grub2-mkconfig -o /boot/grub2/grub.cfg"
            ]
        },
        {
            "type": "shell",
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "scripts": [
                "scripts/install-kubernetes.sh"
            ]
        },
        {
            "type": "file",
            "source": "http/apiserver-vagrant-overrides.conf",
            "destination": "/tmp/apiserver-vagrant-overrides.conf"
        },
        {
            "type": "file",
            "source": "http/apiserver-vagrant-overrides.env",
            "destination": "/tmp/apiserver-vagrant-overrides.env"
        },
        {
            "type": "file",
            "source": "http/controller-manager-vagrant-overrides.conf",
            "destination": "/tmp/controller-manager-vagrant-overrides.conf"
        },
        {
            "type": "file",
            "source": "http/kubelet-vagrant-overrides.conf",
            "destination": "/tmp/kubelet-vagrant-overrides.conf"
        },
        {
            "type": "file",
            "source": "http/kubelet-vagrant-overrides.env",
            "destination": "/tmp/kubelet-vagrant-overrides.env"
        },
        {
            "type": "file",
            "source": "http/containerd-vagrant-overrides.conf",
            "destination": "/tmp/containerd-vagrant-overrides.conf"
        },
        {
            "type": "file",
            "source": "http/kubelet-config",
            "destination": "/tmp/kubelet-config"
        },
        {
            "type": "file",
            "source": "http/user-limits.conf",
            "destination": "/tmp/user-limits.conf"
        },
        {
            "type": "file",
            "source": "http/docker.conf",
            "destination": "/tmp/docker.conf"
        },
        {
            "type": "shell",
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "inline": [
                "# Create directories to ensure packer doesn't mess up",
                "mkdir -p /etc/systemd/system/kube-apiserver.service.d/",
                "mv /tmp/apiserver-vagrant-overrides.conf /etc/systemd/system/kube-apiserver.service.d/vagrant-overrides.conf",
                "mv /tmp/apiserver-vagrant-overrides.env /etc/systemd/system/kube-apiserver.service.d/vagrant-overrides.env",
                "mkdir -p /etc/systemd/system/kube-controller-manager.service.d/",
                "mv /tmp/controller-manager-vagrant-overrides.conf /etc/systemd/system/kube-controller-manager.service.d/vagrant-overrides.conf",
                "mkdir -p /etc/systemd/system/kubelet.service.d/",
                "mv /tmp/kubelet-vagrant-overrides.conf /etc/systemd/system/kubelet.service.d/vagrant-overrides.conf",
                "mv /tmp/kubelet-vagrant-overrides.env /etc/systemd/system/kubelet.service.d/vagrant-overrides.env",
                "mkdir -p /etc/kubernetes",
                "mv /tmp/kubelet-config /etc/kubernetes/kubelet-config",
                "mkdir -p /etc/systemd/system/containerd.service.d",
                "mv /tmp/containerd-vagrant-overrides.conf /etc/systemd/system/containerd.service.d/vagrant-overrides.conf",
                "mv /tmp/user-limits.conf /etc/security/limits.d/vagrant-nproc.conf",
                "mv /tmp/docker.conf /etc/sysconfig/docker"
            ]
        },
        {
            "type": "file",
            "only": ["jenkins-slave"],
            "source": "http/controller-manager-jenkins-overrides.conf",
            "destination": "/etc/systemd/system/kube-controller-manager.service.d/jenkins-overrides.conf"
        },
        {
            "type": "file",
            "only": ["jenkins-slave"],
            "source": "http/data-hostpath-create.service",
            "destination": "/etc/systemd/system/data-hostpath-create.service"
        },
        {
            "type": "file",
            "only": ["jenkins-slave"],
            "source": "http/tmp-hostpath_pv.automount",
            "destination": "/etc/systemd/system/tmp-hostpath_pv.automount"
        },
        {
            "type": "file",
            "only": ["jenkins-slave"],
            "source": "http/tmp-hostpath_pv.mount",
            "destination": "/etc/systemd/system/tmp-hostpath_pv.mount"
        },
        {
            "type": "shell",
            "only": ["jenkins-slave"],
            "inline": [
                "# jenkins-slave (triton) needs to put docker graph in /data for the larger disk",
                "perl -p -i -e 's@(DOCKER_OPTS)=\"(.*)\"@$1=\"$2 --graph=/data/docker\"@' /etc/sysconfig/docker"
            ]
        },
        {
            "type": "shell",
            "only": ["vagrant-virtualbox"],
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "inline": [
                "zypper --non-interactive removelock virtualbox-guest-tools virtualbox-guest-kmp-default",
                "zypper --non-interactive install --no-confirm virtualbox-guest-tools virtualbox-guest-kmp-default",
                "systemctl enable vboxadd-service.service ||: # this sometimes fails but works on reboot?"
            ]
        },
        {
            "type": "shell",
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "scripts": [
                "scripts/install-certstrap.sh",
                "scripts/usr-local-bin-to-path.sh",
                "scripts/create-kube-certs.sh",
                "scripts/wait-for-kube.sh",
                "scripts/setup-pod-security-policies.sh",
                "scripts/setup-service-account.sh",
                "scripts/create-kubedns.sh"
            ],
            "start_retry_timeout": "7m"
        },
        {
            "type": "shell",
            "only": ["jenkins-slave", "scf-cached-libvirt"],
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "scripts": [
                "scripts/install-helm.sh",
                "scripts/install-k.sh"
            ],
            "start_retry_timeout": "7m"
        },
        {
            "type": "shell",
            "only": ["scf-cached-libvirt"],
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "scripts": [
                "scripts/install-cf.sh",
                "scripts/install-cap-archives.sh",
                "scripts/install-helm-images.sh"
            ]
        },
        {
            "type": "shell",
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "scripts": [
                "scripts/stop-kube-and-docker.sh"
            ],
            "start_retry_timeout": "7m"
        },
        {
            "type": "shell",
            "only": ["jenkins-slave"],
            "inline": [
                "zypper --non-interactive install jre-openjdk-headless make zip osc"
            ]
        },
        {
            "type": "shell",
            "only": ["vagrant-vmware", "vagrant-virtualbox", "vagrant-libvirt", "jenkins-slave"],
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "inline": [
                "rm -rf /var/lib/docker/image/* /var/lib/docker/containers/* /var/lib/docker/overlay2"
            ]
        },
        {
            "type": "shell",
            "execute_command": "sudo -E /usr/bin/env {{.Vars}} bash '{{.Path}}'",
            "scripts": [
                "scripts/compact.sh"
            ],
            "start_retry_timeout": "7m"
        }
    ],
    "post-processors": [
        {
            "type": "vagrant",
            "only": ["vagrant-vmware", "vagrant-virtualbox", "vagrant-libvirt"],
            "output": "scf-{{.Provider}}-v{{user `version`}}.box",
            "vagrantfile_template": "Vagrantfile.template"
        }
    ]
}

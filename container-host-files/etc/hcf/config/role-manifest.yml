---
roles:
- name: nats
  jobs:
  - name: nats
    release_name: cf
  - name: nats_stream_forwarder
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: nats
  - name: nats_stream_forwarder
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 4
    exposed-ports:
      - name: 'nats'
        protocol: 'TCP'
        source: 4222
        target: 4222
        public: false
- name: consul
  scripts:
  - consul_agent_loopback_ip.sh
  jobs:
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: consul-data
        size: 100
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'consul'
        protocol: 'TCP'
        source: 8500
        target: 8500
        public: false
  configuration:
    templates:
      properties.consul.agent.mode: '"server"'
- name: mysql
  jobs:
  - name: mysql
    release_name: cf-mysql
  processes:
  - name: mariadb_ctrl
  - name: galera-healthcheck
  - name: gra-log-purger-executable
  run:
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: mysql-data
        size: 100
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'mysql'
        protocol: 'TCP'
        source: 3306
        target: 3306
        public: false
  configuration:
    templates:
      properties.cf_mysql.mysql.cluster_ips: '["((MYSQL_HOST))"]'
      properties.cf_mysql.mysql.database_startup_timeout: '300'
      properties.network_name: 'default'
      properties.cf_mysql.proxy.api_username: 'mysql_proxy'
      properties.cf_mysql.proxy.proxy_ips: '["((MYSQL_PROXY_HOST))"]'
      properties.cf_mysql.mysql.bootstrap_endpoint.username: 'bootstrap_user'
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.proxy.api_password: "((MYSQL_PROXY_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.bootstrap_endpoint.password: "((MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD))"
      properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb", "username":"((CCDB_ROLE_NAME))", "password": "((CCDB_ROLE_PASSWORD))"}, {"name":"uaadb", "username": "((UAADB_USERNAME))", "password":"((UAADB_PASSWORD))"}]'
- name: mysql-proxy
  jobs:
  - name: proxy
    release_name: cf-mysql
  processes:
  - name: switchboard
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'mysql-proxy'
        protocol: 'TCP'
        source: 3306
        target: 3306
        public: false
  configuration:
    templates:
      properties.cf_mysql.mysql.cluster_ips: '["((MYSQL_HOST))"]'
      properties.cf_mysql.mysql.database_startup_timeout: '300'
      properties.network_name: 'default'
      properties.cf_mysql.proxy.api_username: 'mysql_proxy'
      properties.cf_mysql.proxy.proxy_ips: '["((MYSQL_PROXY_HOST))"]'
      properties.cf_mysql.mysql.bootstrap_endpoint.username: 'bootstrap_user'
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.proxy.api_password: "((MYSQL_PROXY_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.bootstrap_endpoint.password: "((MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD))"
      properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb", "username":"((CCDB_ROLE_NAME))", "password": "((CCDB_ROLE_PASSWORD))"}, {"name":"uaadb", "username": "((UAADB_USERNAME))", "password":"((UAADB_PASSWORD))"}]'
      # TODO: Take this out, and place our generated CA cert
      # into the appropriate /usr/share/ca-certificates folders
      # and call update-ca-certificates at container startup
      properties.proxy.api_force_https: 'false'
      properties.skip_ssl_validation: 'true'
      properties.cf-usb.skip_tls_validation: 'true'
- name: diego-database
  scripts:
  - make_sys_proc_tweaks_optional.sh
  - consul_agent_loopback_ip.sh
  # etcd_health_check_ipv4_only.sh merged in etcd-release v37
  - etcd_health_check_ipv4_only.sh
  jobs:
  - name: etcd
    release_name: etcd
  - name: bbs
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: bbs
  - name: etcd
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: diego-database-data
        size: 100
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'diego-database'
        protocol: 'TCP'
        source: 8889
        target: 8889
        public: false
    hosts:
      - diego-database-0.etcd.service.cf.internal: 127.0.0.1
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port":"54053", "uris":["usb.((DOMAIN))",  "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port":"54054", "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: ha-proxy
  scripts:
  - consul_agent_loopback_ip.sh
  jobs:
  - name: haproxy
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: consul_template
  - name: haproxy
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'ha-proxy'
        protocol: 'TCP'
        source: 80
        target: 80
        public: true
      - name: 'ha-proxy2'
        protocol: 'TCP'
        source: 443
        target: 443
        public: true
      - name: 'ha-proxy3'
        protocol: 'TCP'
        source: 4443
        target: 4443
        public: true
- name: router
  scripts:
  - make_sys_proc_tweaks_optional.sh
  - consul_agent_loopback_ip.sh
  jobs:
  - name: gorouter
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: gorouter
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 2048
    virtual-cpus: 4
    exposed-ports:
      - name: 'router'
        protocol: 'TCP'
        source: 80
        target: 80
        public: false
- name: uaa
  scripts:
  - consul_agent_loopback_ip.sh
  jobs:
  - name: uaa
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  processes:
  - name: uaa
  - name: consul_agent
  - name: route_registrar
  - name: metron_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'uaa'
        protocol: 'TCP'
        source: 8080
        target: 8080
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"uaa", "port":"8080", "tags":{"component":"uaa"}, "uris":["uaa.((DOMAIN))", "*.uaa.((DOMAIN))", "login.((DOMAIN))", "*.login.((DOMAIN))"], "registration_interval":"10s"}]'
- name: api
  scripts:
  - perform_nfs_test.sh
  - make_sys_proc_tweaks_optional.sh
  # cc_internal_hostname fixed in cloud_controller_ng.git#8f9f27ae
  - fix_cc_internal_service_hostname.sh
  - consul_agent_loopback_ip.sh
  jobs:
  - name: cloud_controller_ng
    release_name: cf
  - name: statsd-injector
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  - name: go-buildpack
    release_name: cf
  - name: binary-buildpack
    release_name: cf
  - name: nodejs-buildpack
    release_name: cf
  - name: ruby-buildpack
    release_name: cf
  - name: php-buildpack
    release_name: cf
  - name: python-buildpack
    release_name: cf
  - name: staticfile-buildpack
    release_name: cf
  processes:
  - name: cloud_controller_ng
  - name: cloud_controller_worker_local_1
  - name: cloud_controller_migration
  - name: route_registrar
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs/shared'
      tag: api-data
      size: 100
    memory: 2048
    virtual-cpus: 4
    exposed-ports:
      - name: 'api'
        protocol: 'TCP'
        source: 9022
        target: 9022
        public: false
  configuration:
    templates:
      properties.etcd.machines: '["((ETCD_HOST))"]'
      properties.route_registrar.routes: '[{"name":"api", "port":9022, "tags":{"component":"CloudController"}, "uris":["api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: api-worker
  scripts:
  - consul_agent_loopback_ip.sh
  jobs:
  - name: cloud_controller_worker
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cloud_controller_worker_1
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs/shared'
      size: 100
      tag: 'api-data'
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: clock-global
  scripts:
  - consul_agent_loopback_ip.sh
  jobs:
  - name: cloud_controller_clock
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cloud_controller_clock
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: cf-usb
  scripts:
  - consul_agent_loopback_ip.sh
  jobs:
  - name: cf-usb
    release_name: cf-usb
  - name: consul_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  processes:
  - name: usb
  - name: route_registrar
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs'
      size: 100
      tag: 'cf-usb-data'
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'usb'
        protocol: 'TCP'
        source: 54054
        target: 54054
        public: false
      - name: 'usb2'
        protocol: 'TCP'
        source: 54053
        target: 54053
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port":"54053", "uris":["usb.((DOMAIN))", "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port":"54054", "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: doppler
  scripts:
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: doppler
    release_name: cf
  - name: syslog_drain_binder
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  processes:
  - name: doppler
  - name: route_registrar
  - name: syslog_drain_binder
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"doppler", "port":"8081", "uris":["doppler.((DOMAIN))"], "registration_interval":"10s"}, {"name":"loggregator_trafficcontroller", "port":"8080", "uris":["loggregator.((DOMAIN))"], "registration_interval":"10s"}]'
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'doppler'
        protocol: 'TCP'
        source: 3456
        target: 3456
        public: false
    exposed-ports:
      - name: 'doppler2'
        protocol: 'TCP'
        source: 3457
        target: 3457
        public: false
- name: etcd
  scripts:
  # etcd_health_check_ipv4_only.sh merged in etcd-release v37
  - etcd_health_check_ipv4_only.sh
  jobs:
  - name: etcd
    release_name: cf
  - name: etcd_metrics_server
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: etcd_metrics_server
  - name: etcd
  - name: metron_agent
  run:
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        size: 100
        tag: cf-etcd-data
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'etcd'
        protocol: 'TCP'
        source: 2379
        target: 2379
        public: false
      - name: 'etcd2'
        protocol: 'TCP'
        source: 2380
        target: 2380
        public: false
  configuration:
    templates:
      properties.etcd.peer_require_ssl: 'false'
      properties.etcd.require_ssl: 'false'
      properties.etcd.cluster: 'null'
      properties.etcd.peer_key: 'null'
      properties.etcd.peer_cert: 'null'
      properties.etcd.peer_ca_cert: 'null'
      properties.etcd.server_key: 'null'
      properties.etcd.client_key: 'null'
      properties.etcd.server_cert: 'null'
      properties.etcd.client_cert: 'null'
      properties.etcd.ca_cert: 'null'
      properties.etcd.machines: '["((ETCD_HOST))"]'
- name: loggregator
  scripts:
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: loggregator_trafficcontroller
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  processes:
  - name: loggregator_trafficcontroller
  - name: route_registrar
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"doppler", "port":"8081", "uris":["doppler.((DOMAIN))"], "registration_interval":"10s"}, {"name":"loggregator_trafficcontroller", "port":"8080", "uris":["loggregator.((DOMAIN))"], "registration_interval":"10s"}]'
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'loggregator'
        protocol: 'TCP'
        source: 8080
        target: 8080
        public: false
- name: diego-brain
  scripts:
  - consul_agent_loopback_ip.sh
  jobs:
  - name: consul_agent
    release_name: cf
  - name: auctioneer
    release_name: diego
  - name: converger
    release_name: diego
  - name: metron_agent
    release_name: cf
  processes:
  - name: converger
  - name: auctioneer
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 4
    exposed-ports:
      - name: 'diego-brain'
        protocol: 'TCP'
        source: 9016
        target: 9016
        public: false
- name: diego-cc-bridge
  scripts:
  - make_sys_proc_tweaks_optional.sh
  - consul_agent_loopback_ip.sh
  jobs:
  - name: stager
    release_name: diego
  - name: nsync
    release_name: diego
  - name: tps
    release_name: diego
  - name: cc_uploader
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: stager
  - name: tps_watcher
  - name: nsync_listener
  - name: nsync_bulker
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 4
    exposed-ports:
      - name: 'diego-cc-bridge'
        protocol: 'TCP'
        source: 9090
        target: 9090
        public: false
- name: diego-route-emitter
  scripts:
  - consul_agent_loopback_ip.sh
  jobs:
  - name: route_emitter
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: route_emitter
  - name: metron_agent
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: diego-access
  scripts:
  - make_sys_proc_tweaks_optional.sh
  - consul_agent_loopback_ip.sh
  jobs:
  - name: ssh_proxy
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: file_server
    release_name: diego
  processes:
  - name: file_server
  - name: metron_agent
  - name: ssh_proxy
  - name: consul_agent
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'diego-access'
        protocol: 'TCP'
        source: 2222
        target: 2222
        public: true
- name: diego-cell
  scripts:
  - prevent_apparmor_disable.sh
  - fix_linux_garden_dns.sh
  - make_sys_proc_tweaks_optional.sh
  - consul_agent_loopback_ip.sh
  post_config_scripts:
  - diego-cell-pre-start.sh
  jobs:
  - name: rep
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: garden
    release_name: garden-linux
  - name: rootfses
    release_name: diego
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: consul_agent
  - name: rep
  - name: garden
  run:
    capabilities: ['ALL']
    persistent-volumes: []
    shared-volumes: []
    memory: 2048
    virtual-cpus: 4
    exposed-ports: []
- name: acceptance-tests
  type: bosh-task
  jobs:
  - name: acceptance-tests
    release_name: cf
  run:
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: smoke-tests
  type: bosh-task
  jobs:
  - name: smoke-tests
    release_name: cf
  run:
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: post_deployment_setup
  type: bosh-task
  jobs:
  - name: cf-set-proxy
    release_name: hcf-deployment-hooks
  processes: []
  run:
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: windows-dns
  type: docker
  run:
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports:
      - name: 'windows-dns'
        protocol: 'UDP'
        source: 53
        target: 8600
        public: true
- name: mongodb-manager
  type: docker
  run:
    capabilities: []
    persistent-volumes:
      - path: /data/db
        tag: mongodb-manager-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: mysql-manager
  type: docker
  run:
    capabilities: []
    persistent-volumes:
      - path: /var/lib/mysql
        tag: mysql-manager-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: postgres-manager
  type: docker
  run:
    capabilities: []
    persistent-volumes:
      - path: /var/lib/postgresql/data
        tag: postgres-manager-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: rabbitmq-manager
  type: docker
  run:
    capabilities: ['ALL']
    persistent-volumes:
      - path: /var/rabbitmq-data
        tag: rabbitmq-manager-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: redis-manager
  type: docker
  run:
    capabilities: ['ALL']
    persistent-volumes:
      - path: /var/redis-data
        tag: redis-manager-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: usb_create_services
  type: bosh-task
  jobs:
  - name: usb-create-services
    release_name: hcf-deployment-hooks
  processes: []
  run:
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
configuration:
  variables:
  - name: API_HOST
    default: "api"
  - name: DIEGO_DATABASE_HOST
    default: "diego-database"
  - name: DIEGO_ACCESS_HOST
    default: "diego-access"
  - name: DIEGO_CC_BRIDGE_HOST
    default: "diego-cc-bridge"
  - name: DIEGO_BRAIN_HOST
    default: "diego-brain"
  - name: NATS_HOST
    default: "nats"
  - name: MYSQL_PROXY_HOST
    default: "mysql-proxy"
  - name: MYSQL_HOST
    default: "mysql"
  - name: ETCD_HOST
    default: "etcd"
  - name: CONSUL_HOST
    default: "consul"
  - name: ROUTER_HOST
    default: "router"
  - name: LOGGREGATOR_HOST
    default: "loggregator"
  - name: PUBLIC_IP
    default: "192.168.77.77"
  - name: BULK_API_PASSWORD
    secret: true
  - name: CCDB_ROLE_NAME
    default: ccadmin
  - name: CCDB_ROLE_PASSWORD
    secret: true
  - name: CCDB_ROLE_TAG
    default: admin
  - name: CERTS_PREFIX
    default: hcf
  - name: DROPLET_DIRECTORY_KEY
    default: droplet_directory_key
  - name: BUILDPACK_DIRECTORY_KEY
    default: buildpack_directory_key
  - name: CF_USB_USERNAME
    default: broker-admin
  - name: CF_USB_PASSWORD
    secret: true
  - name: CLUSTER_ADMIN_AUTHORITIES
    default: scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read
  - name: CLUSTER_ADMIN_PASSWORD
    secret: true
  - name: CLUSTER_ADMIN_USERNAME
    default: admin
  - name: CONSUL_ENCRYPTION_KEYS
    secret: true
  - name: DB_ENCRYPTION_KEY
    secret: true
  - name: DOMAIN
    default: "192.168.77.77.nip.io"
  - name: DOPPLER_ZONE
    default: z1
  - name: LOGGREGATOR_SHARED_SECRET
    secret: true
  - name: METRON_AGENT_ZONE
    default: z1
  - name: MONIT_PASSWORD
    secret: true
  - name: MONIT_PORT
    default: '2822'
  - name: MONIT_USER
    default: monit_user
  - name: NATS_PASSWORD
    secret: true
  - name: NATS_USER
    default: nats_user
  - name: SERVICE_PROVIDER_KEY_PASSPHRASE
    secret: true
  - name: STAGING_UPLOAD_PASSWORD
    secret: true
  - name: STAGING_UPLOAD_USER
    default: username
  - name: INTERNAL_API_PASSWORD
    secret: true
  - name: INTERNAL_API_USER
    default: internal_user
  - name: TRAFFIC_CONTROLLER_ZONE
    default: z1
  - name: UAA_ADMIN_CLIENT_SECRET
    secret: true
  - name: UAA_BATCH_PASSWORD
    secret: true
  - name: UAA_BATCH_USERNAME
    default: batch_username
  - name: UAA_CC_CLIENT_SECRET
    secret: true
  - name: UAA_CC_ROUTING_SECRET
    secret: true
  - name: UAA_CLIENTS_APP_DIRECT_SECRET
    secret: true
  - name: UAA_CLIENTS_DEVELOPER_CONSOLE_SECRET
    secret: true
  - name: UAA_CLIENTS_DOPPLER_SECRET
    secret: true
  - name: UAA_CLIENTS_GOROUTER_SECRET
    secret: true
  - name: UAA_CLIENTS_LOGIN_SECRET
    secret: true
  - name: UAA_CLIENTS_NOTIFICATIONS_SECRET
    secret: true
  - name: UAA_CLIENTS_CC_ROUTING_SECRET
    secret: true
  - name: UAA_CLIENTS_CC_SERVICE_SECRET
    secret: true
  - name: UAA_CLIENTS_CF_USB_SECRET
    secret: true
  - name: UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET
    secret: true
  - name: UAA_CLIENTS_TCP_EMITTER_SECRET
    secret: true
  - name: UAA_CLIENTS_TCP_ROUTER_SECRET
    secret: true
  - name: BBS_ACTIVE_KEY_LABEL
    default: key1
  - name: BBS_ACTIVE_KEY_PASSPHRASE
    secret: true
  - name: MYSQL_ADMIN_PASSWORD
    secret: true
  - name: MYSQL_PROXY_ADMIN_PASSWORD
    secret: true
  - name: MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD
    secret: true
  - name: UAA_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET
    secret: true
  - name: UAADB_PASSWORD
    secret: true
  - name: UAADB_TAG
    default: admin
  - name: UAADB_USERNAME
    default: uaaadmin
  - name: ALLOWED_SERVICES_SUBNET
    default: 172.20.10.0/24
  # Certificates
  - name: CERTS_ROOT_CHAIN_PEM
    secret: true
  - name: JWT_SIGNING_PEM
    secret: true
  - name: JWT_SIGNING_PUB
    secret: true
  - name: ETCD_PEER_KEY
    secret: true
  - name: ETCD_PEER_CRT
    secret: true
  - name: ETCD_PEER_CA_CRT
    secret: true
  - name: ETCD_SERVER_KEY
    secret: true
  - name: ETCD_CLIENT_KEY
    secret: true
  - name: ETCD_SERVER_CRT
    secret: true
  - name: ETCD_CLIENT_CRT
    secret: true
  - name: ETCD_CA_CRT
    secret: true
  - name: BBS_SERVER_KEY
    secret: true
  - name: BBS_CLIENT_KEY
    secret: true
  - name: BBS_SERVER_CRT
    secret: true
  - name: BBS_CLIENT_CRT
    secret: true
  - name: BBS_CA_CRT
    secret: true
  - name: SSH_KEY
    secret: true
  - name: APP_SSH_HOST_KEY_FINGERPRINT
    secret: true
  - name: ROUTER_SSL_CERT
    secret: true
  - name: ROUTER_SSL_KEY
    secret: true
  - name: UAA_PRIVATE_KEY
    secret: true
  - name: UAA_CERTIFICATE
    secret: true
  templates:
    index: 0
    networks.default.ip: '"((IP_ADDRESS))"'
    networks.default.dns_record_name: '"((DNS_RECORD_NAME))"'
    properties.app_domains: '["((DOMAIN))"]'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_HOST_KEY_FINGERPRINT))"'
    properties.cc.bulk_api_password: '"((BULK_API_PASSWORD))"'
    properties.cc.db_encryption_key: '"((DB_ENCRYPTION_KEY))"'
    properties.cc.droplets.droplet_directory_key: '"((DROPLET_DIRECTORY_KEY))"'
    properties.cc.srv_api_uri: '"https://api.((DOMAIN))"'
    properties.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.cc.internal_api_user: '"((INTERNAL_API_USER))"'
    properties.cc.internal_api_password: '"((INTERNAL_API_PASSWORD))"'
    properties.cc.buildpacks.buildpack_directory_key: '"((BUILDPACK_DIRECTORY_KEY))"'
    properties.cc.security_group_definitions: '[{"name":"public_networks", "rules":[{"destination":"0.0.0.0-9.255.255.255", "protocol":"all"}, {"destination":"11.0.0.0-169.253.255.255","protocol":"all"}, {"destination":"169.255.0.0-172.15.255.255","protocol":"all"}, {"destination":"172.32.0.0-192.167.255.255","protocol":"all"}, {"destination":"192.169.0.0-255.255.255.255","protocol":"all"}]}, {"name": "dev_services", "rules": [{"destination":"((ALLOWED_SERVICES_SUBNET))","protocol":"all"}]}, {"name":"dns", "rules": [{"destination":"0.0.0.0/0","ports":"53","protocol":"tcp"},{"destination":"0.0.0.0/0","ports":"53","protocol":"udp"}]}]' 
    properties.ccdb.roles: '[{"name": "((CCDB_ROLE_NAME))", "password": "((CCDB_ROLE_PASSWORD))", "tag": "((CCDB_ROLE_TAG))"}]'
    properties.uaadb.roles: '[{"name": "((UAADB_USERNAME))", "password": "((UAADB_PASSWORD))", "tag": "((UAADB_TAG))"}]'
    properties.consul.agent.servers.lan: '["((CONSUL_HOST))"]'
    properties.etcd.dns_health_check_host: '"((CONSUL_HOST))"'
    properties.domain: '"((DOMAIN))"'
    properties.doppler.zone: '"((DOPPLER_ZONE))"'
    properties.doppler_endpoint.shared_secret: '"((LOGGREGATOR_SHARED_SECRET))"'
    properties.etcd_metrics_server.nats.username: '"((NATS_USER))"'
    properties.etcd_metrics_server.nats.password: '"((NATS_PASSWORD))"'
    properties.hcf.monit.user: '"((MONIT_USER))"'
    properties.hcf.monit.password: '"((MONIT_PASSWORD))"'
    properties.hcf.monit.port: '((MONIT_PORT))'
    properties.metron_agent.zone: '"((METRON_AGENT_ZONE))"'
    properties.nats.user: '"((NATS_USER))"'
    properties.nats.password: '"((NATS_PASSWORD))"'
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.batch.username: '"((UAA_BATCH_USERNAME))"'
    properties.uaa.batch.password: '"((UAA_BATCH_PASSWORD))"'
    properties.uaa.cc.client_secret: '"((UAA_CC_CLIENT_SECRET))"'
    properties.uaa.clients.cf-usb.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.uaa.clients.app-direct.secret: '"((UAA_CLIENTS_APP_DIRECT_SECRET))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CC_ROUTING_SECRET))"'
    properties.uaa.clients.cc-service-dashboards.secret: '"((UAA_CLIENTS_CC_SERVICE_SECRET))"'
    properties.uaa.clients.developer_console.secret: '"((UAA_CLIENTS_DEVELOPER_CONSOLE_SECRET))"'
    properties.uaa.clients.notifications.secret: '"((UAA_CLIENTS_NOTIFICATIONS_SECRET))"'
    properties.uaa.clients.login.secret: '"((UAA_CLIENTS_LOGIN_SECRET))"'
    properties.uaa.clients.login.redirect-uri: '"https://login.((DOMAIN))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CLIENTS_CC_ROUTING_SECRET))"'
    properties.uaa.clients.doppler.secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.uaa.clients.cloud_controller.secret: "((UAA_CC_CLIENT_SECRET))"
    properties.uaa.clients.cloud_controller_username_lookup.secret: '"((UAA_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET))"'
    properties.uaa.clients.gorouter.secret: '"((UAA_CLIENTS_GOROUTER_SECRET))"'
    properties.uaa.clients.ssh-proxy.secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.uaa.clients.tcp_emitter.secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.tcp_router.secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.uaa.scim.users: '["((CLUSTER_ADMIN_USERNAME))|((CLUSTER_ADMIN_PASSWORD))|((CLUSTER_ADMIN_AUTHORITIES))"]'
    properties.system_domain: '"((DOMAIN))"'
    properties.traffic_controller.zone: '"((TRAFFIC_CONTROLLER_ZONE))"'
    properties.cf-usb.broker.external_url: '"brokers.((DOMAIN))"'
    properties.cf-usb.broker.username: '"((CF_USB_USERNAME))"'
    properties.cf-usb.broker.password: '"((CF_USB_PASSWORD))"'
    properties.cf-usb.management.uaa.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.diego.bbs.encryption_keys: '[{"label": "((BBS_ACTIVE_KEY_LABEL))", "passphrase": "((BBS_ACTIVE_KEY_PASSPHRASE))"}]'
    properties.diego.cc_uploader.cc.base_url: '"https://api.((DOMAIN))"'
    properties.diego.cc_uploader.cc.basic_auth_username: '"((INTERNAL_API_USER))"'
    properties.diego.cc_uploader.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.diego.cc_uploader.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.diego.cc_uploader.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.diego.nsync.cc.base_url: '"https://api.((DOMAIN))"'
    properties.diego.nsync.cc.basic_auth_username: '"((INTERNAL_API_USER))"'
    properties.diego.nsync.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.diego.nsync.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.diego.nsync.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.diego.route_emitter.nats.user: '"((NATS_USER))"'
    properties.diego.route_emitter.nats.password: '"((NATS_PASSWORD))"'
    properties.diego.ssh_proxy.servers: '["((DIEGO_ACCESS_HOST))"]'
    properties.diego.ssh_proxy.uaa_token_url: '"https://uaa.((DOMAIN))/oauth/token"'
    properties.diego.ssh_proxy.uaa_secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.diego.stager.cc.base_url: '"https://api.((DOMAIN))"'
    properties.diego.stager.cc.basic_auth_username: '"((INTERNAL_API_USER))"'
    properties.diego.stager.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.diego.stager.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.diego.stager.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.diego.tps.cc.base_url: '"https://api.((DOMAIN))"'
    properties.diego.tps.cc.basic_auth_username: '"((INTERNAL_API_USER))"'
    properties.diego.tps.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.diego.tps.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.diego.tps.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.diego.tps.traffic_controller_url: '"wss://doppler.((DOMAIN)):443"'
    properties.diego.bbs.active_key_label: '"((BBS_ACTIVE_KEY_LABEL))"'
    properties.hm9000.url: '"https://hm9000.((DOMAIN))"'
    properties.uaa.url: '"https://uaa.((DOMAIN))"'
    properties.nats.machines: '["((NATS_HOST))"]'
    properties.etcd_metrics_server.nats.machines: '["((NATS_HOST))"]'
    properties.etcd_metrics_server.machines: '["((NATS_HOST))"]'
    properties.etcd.machines: '["((DIEGO_DATABASE_HOST))"]'
    properties.loggregator.etcd.machines: '["((ETCD_HOST))"]'
    properties.router.servers.z1: '["((ROUTER_HOST))"]'
    properties.cc.internal_service_hostname: '"((API_HOST))"'
    properties.ccdb.address: '((MYSQL_PROXY_HOST))'
    properties.uaadb.address: '((MYSQL_PROXY_HOST))'
    properties.diego.auctioneer.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.bbs.auctioneer.api_url: 'http://((DIEGO_BRAIN_HOST)):9016'
    properties.diego.bbs.etcd.machines: '["((DIEGO_DATABASE_HOST))"]'
    properties.diego.converger.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.nsync.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.rep.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.route_emitter.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.ssh_proxy.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.stager.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.tps.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.route_emitter.nats.machines: '["((NATS_HOST))"]'
    properties.cc.diego.nsync_url: "http://((DIEGO_CC_BRIDGE_HOST)):8787"
    properties.cc.diego.stager_url: "http://((DIEGO_CC_BRIDGE_HOST)):8888"
    properties.cc.diego.tps_url: "http://((DIEGO_CC_BRIDGE_HOST)):1518"
    properties.diego.nsync.file_server_url: "http://((DIEGO_ACCESS_HOST)):8080"
    properties.diego.stager.staging_task_callback_url: "http://((DIEGO_CC_BRIDGE_HOST)):8888"
    properties.diego.stager.cc.internal_service_hostname: "((API_HOST))"
    properties.diego.stager.file_server_url: "http://((DIEGO_ACCESS_HOST)):8080"
    properties.diego.stager.cc_uploader_url: "http://((DIEGO_CC_BRIDGE_HOST)):9090"
    # TODO: configure this once we have the diego docker cache deployed
    # diego.stager.docker_registry_address: "docker-registry.service.cf.internal:8080"
    properties.diego.tps.bbs.api_location: "((DIEGO_DATABASE_HOST)):8889"
    properties.diego.tps.cc.internal_service_hostname: "((API_HOST))"
    properties.diego.tps.traffic_controller_url: "ws://((LOGGREGATOR_HOST)):8081"
    properties.diego.ssh_proxy.cc.internal_service_hostname: "((API_HOST))"
    # Setting certificate values
    properties.ha_proxy.ssl_pem: '"((CERTS_ROOT_CHAIN_PEM))"'
    properties.uaa.jwt.signing_key: '"((JWT_SIGNING_PEM))"'
    properties.uaa.jwt.verification_key: '"((JWT_SIGNING_PUB))"'
    properties.uaa.sslCertificate: '"((UAA_CERTIFICATE))"'
    properties.uaa.sslPrivateKey: '"((UAA_PRIVATE_KEY))"'
    properties.cf-usb.management.public_key: '"((JWT_SIGNING_PUB))"'
    # Diego certificates
    properties.etcd.peer_key: '"((ETCD_PEER_KEY))"'
    properties.etcd.peer_cert: '"((ETCD_PEER_CRT))"'
    properties.etcd.peer_ca_cert: '"((ETCD_PEER_CA_CRT))"'
    properties.etcd.server_key: '"((ETCD_SERVER_KEY))"'
    properties.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.diego.bbs.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.etcd.server_cert: '"((ETCD_SERVER_CRT))"'
    properties.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.diego.bbs.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.etcd.ca_cert: '"((ETCD_CA_CRT))"'
    properties.diego.bbs.etcd.ca_cert: '"((ETCD_CA_CRT))"'
    properties.diego.bbs.server_key: '"((BBS_SERVER_KEY))"'
    properties.diego.tps.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.stager.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.ssh_proxy.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.route_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.rep.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.nsync.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.converger.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.auctioneer.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.bbs.server_cert: '"((BBS_SERVER_CRT))"'
    properties.diego.tps.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.stager.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.ssh_proxy.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.route_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.rep.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.nsync.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.converger.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.auctioneer.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.tps.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.stager.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.ssh_proxy.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.route_emitter.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.rep.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.nsync.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.converger.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.auctioneer.bbs.ca_cert: '"((BBS_CA_CRT))"'
    # The "host key" mentioned here is actually an RSA private key file, with no passphrase
    properties.diego.ssh_proxy.host_key: '"((SSH_KEY))"'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_HOST_KEY_FINGERPRINT))"'
    properties.router.ssl_cert: '"((ROUTER_SSL_CERT))"'
    properties.router.ssl_key: '"((ROUTER_SSL_KEY))"'
    properties.smoke_tests.api: '"api.((DOMAIN))"'
    properties.smoke_tests.apps_domain: '["((DOMAIN))"]'
    properties.smoke_tests.user: '"((CLUSTER_ADMIN_USERNAME))"'
    properties.smoke_tests.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    # These settings must remain in the role manifest until they're available
    # in the upstream specs; even though they're also defined in the opinions file
    properties.cc.tweak_proc_sys: false
    properties.router.tweak_proc_sys: false
    properties.doppler.tweak_locked_memory: false
    properties.traffic_controller.tweak_locked_memory: false
    properties.syslog_drain_binder.tweak_locked_memory: false
    properties.diego.bbs.tweak_proc_sys: false
    properties.diego.cc_uploader.tweak_proc_sys: false
    properties.diego.file_server.tweak_proc_sys: false
    properties.diego.rep.tweak_proc_sys: false
    properties.diego.stager.tweak_proc_sys: false

#!/bin/bash
# This script waits for the mysql broker to come online, so we can register it
# with the api

set -o errexit -o nounset

# Default: verbose operation. Uncomment 2nd line to quiet this job
SILENT=
#SILENT=--silent

BROKER_URL='<%= p("cf_mysql.broker.protocol") %>://<%= p("cf_mysql.external_host") %>:<%= p("cf_mysql.broker.port") %>'
BROKER_USERNAME='<%= p("cf_mysql.broker.auth_username") %>'
BROKER_PASSWORD='<%= p("cf_mysql.broker.auth_password") %>'


# Report progress to the user; use as printf
status() {
    local fmt="${1}"
    shift
    printf "\n%b${fmt}%b\n" "\033[0;32m" "$@" "\033[0m"
}

# Report problem to the user; use as printf
trouble() {
    local fmt="${1}"
    shift
    printf "\n%b${fmt}%b\n" "\033[0;31m" "$@" "\033[0m"
}

# helper function to retry a command several times, with a delay between trials
# usage: retry <max-tries> <delay> <command>...
function retry () {
    max=${1}
    delay=${2}
    i=0
    shift 2

    while test ${i} -lt ${max} ; do
        printf "Trying: %s\n" "$*"
        if "$@" ; then
            status ' SUCCESS'
            break
        fi
        trouble '  FAILED'
        status "Waiting ${delay} ..."
        sleep "${delay}"
        i="$(expr ${i} + 1)"
    done
}

status "Waiting for dev mysql broker to be available..."

retry 240 30s curl ${SILENT} --connect-timeout 5 --fail --head --header 'Accept: application/json' -u ${BROKER_USERNAME}:${BROKER_PASSWORD} ${BROKER_URL}/v2/catalog 

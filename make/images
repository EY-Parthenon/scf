#!/bin/sh

set -o errexit -o nounset

GIT_ROOT=${GIT_ROOT:-$(git rev-parse --show-toplevel)}

. ${GIT_ROOT}/make/include/registry
. ${GIT_ROOT}/make/include/versioning

TARGET=${1}
ACTION=${2}

case ${TARGET} in
    docker)
        ROLES=$(${GIT_ROOT}/container-host-files/opt/hcf/bin/list-docker-roles.sh)
        PREFIX=''
        ;;
    bosh)
        ROLES=$(fissile show image| awk -F : '{ print $1 }' | sed 's/^fissile-//')
        PREFIX='fissile-'
        ;;
esac

for ROLE in ${ROLES}; do
    case ${ACTION} in
        build)
            cd ${GIT_ROOT}/docker-images/${ROLE}
            docker build --tag ${ROLE} .
            ;;
        tag)
            case ${TARGET} in
                bosh)
                    TAG=$(fissile show image | awk -F : "/fissile-${ROLE}:/ {print \$2 }")
                ;;
                *)
                    TAG=latest
                ;;
            esac
            docker tag ${PREFIX}${ROLE}:${TAG} ${IMAGE_REGISTRY}${IMAGE_ORG}/${IMAGE_PREFIX}-${ROLE}:${DOCKER_APP_VERSION}
            docker tag ${PREFIX}${ROLE}:${TAG} ${IMAGE_REGISTRY}${IMAGE_ORG}/${IMAGE_PREFIX}-${ROLE}:${GIT_BRANCH}
            ;;
        publish)
            docker push ${IMAGE_REGISTRY}${IMAGE_ORG}/${IMAGE_PREFIX}-${ROLE}:${DOCKER_APP_VERSION}
            docker push ${IMAGE_REGISTRY}${IMAGE_ORG}/${IMAGE_PREFIX}-${ROLE}:${GIT_BRANCH}
            ;;
        clean)
            case ${TARGET} in
                bosh)
                    # For bosh images, there may be images with stale tags we want to delete
                    WANTED_TAG=$(fissile show image | awk -F : "/fissile-${ROLE}:/ {print \$2 }")
                    docker images ${PREFIX}${ROLE} | tail -n +2 | while read REPOSITORY TAG _ ; do
                        if test "${TAG}" != "${WANTED_TAG}" ; then
                            docker rmi "${REPOSITORY}:${TAG}"
                        fi
                    done
                ;;
                *)
                    # For non-bosh images, everything is :latest, no other tags to delete
                ;;
            esac
            # For all images, there may be things tagged for the registry for the wrong branch
            docker images ${IMAGE_REGISTRY}${IMAGE_ORG}/${IMAGE_PREFIX}-${ROLE} | tail -n +2 | while read REPOSITORY TAG _; do
                if test "${TAG}" != "${DOCKER_APP_VERSION}" -a "${TAG}" != "${GIT_BRANCH}" ; then
                    docker rmi "${REPOSITORY}:${TAG}"
                fi
            done
            ;;
    esac
done

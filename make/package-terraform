#!/bin/sh

set -o errexit -o nounset

GIT_ROOT=${GIT_ROOT:-$(git rev-parse --show-toplevel)}

. ${GIT_ROOT}/make/include/versioning

TARGET=${1}
# Base target, without modifiers.
STEM=$(echo ${TARGET} | sed -e 's@-.*@@')

WORKDIR=$(mktemp -d $(echo ${TARGET} | tr - _)_XXXXXXXXXX)
trap "rm -rf ${WORKDIR}" HUP INT TERM EXIT

ARTIFACT=${ARTIFACT_NAME}-${TARGET}-${APP_VERSION}.zip

mkdir -p ${WORKDIR}/${TARGET}

cp -rf \
   container-host-files \
   hcf-${TARGET}.tf.json \
   terraform/${STEM}.tfvars.example \
   terraform/README-${STEM}.md \
   ${WORKDIR}/${TARGET}/

# Assemble AWS terraform from pieces, with variants overriding base definitions.
case ${TARGET} in
    aws*)
	mkdir ${WORKDIR}/${TARGET}/terraform
	cp terraform/aws/common/*.tf ${WORKDIR}/${TARGET}/
	cp terraform/wait-for-ssh.sh ${WORKDIR}/${TARGET}/terraform/
	;;
esac
case ${TARGET} in
    aws-spot)
	cp terraform/aws/spot/*.tf ${WORKDIR}/${TARGET}/
	;;
    aws-proxy)
	cp terraform/aws/proxy/*.tf ${WORKDIR}/${TARGET}/
	;;
    aws-spot-proxy)
	cp terraform/aws/spot/*.tf       ${WORKDIR}/${TARGET}/
	cp terraform/aws/proxy/*.tf      ${WORKDIR}/${TARGET}/
	cp terraform/aws/spot-proxy/*.tf ${WORKDIR}/${TARGET}/
	;;
esac

case ${TARGET} in
    aws-*proxy)
	cp  terraform/proxy.conf \
	    terraform/proxy-setup.sh \
	    ${WORKDIR}/${TARGET}/terraform
	;;
esac

cd ${WORKDIR}
zip -9 -r ${GIT_ROOT}/${ARTIFACT} ${TARGET}

cd ${GIT_ROOT}
rm -rf ${WORKDIR}

echo Generated ${ARTIFACT}

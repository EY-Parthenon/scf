#!/bin/sh

set -o errexit -o nounset

GIT_ROOT=${GIT_ROOT:-$(git rev-parse --show-toplevel)}

. ${GIT_ROOT}/make/include/fissile

HCF_PACKAGE_COMPILATION_CACHE=${HCF_PACKAGE_COMPILATION_CACHE:-''}

# Return a list of desired packages with their versions, as in package/00000000
get_package_version_list() {
    fissile dev packages-report | grep -v 'Dev release' | grep -F '(' | while read package hash ; do
        hash=$(echo ${hash} | tr -c -d 0-9a-f)
        echo ${package}/${hash}
    done
}

cache() {
    test -z "${HCF_PACKAGE_COMPILATION_CACHE}" && return

    for package_version in $(get_package_version_list) ; do
        archive="${HCF_PACKAGE_COMPILATION_CACHE}/${package_version}/compiled.tar"
        test -e "${archive}" && {
            # Don't recreate an archive that already exists
            echo "Found:   ${archive}"
            continue
        }
        mkdir -p "$(dirname "${archive}")"
        echo "Creating ${archive}"
        tar cf "${archive}" -C "${FISSILE_WORK_DIR}/compilation/${package_version}/" compiled
    done

    echo "Cache saved to ${HCF_PACKAGE_COMPILATION_CACHE}"
}

restore() {
    test -z "${HCF_PACKAGE_COMPILATION_CACHE}" && return
    test -d "${FISSILE_WORK_DIR}/compilation/" && return

    mkdir -p "${FISSILE_WORK_DIR}/compilation/"
    mkdir -p "${HCF_PACKAGE_COMPILATION_CACHE}"

    for package_version in $(get_package_version_list) ; do
        archive="${HCF_PACKAGE_COMPILATION_CACHE}/${package_version}/compiled.tar"
        test -r "${archive}" || {
            echo "Missing:   ${archive}"
            continue
        }
        echo "Extracting ${archive}"
        mkdir -p "${FISSILE_WORK_DIR}/compilation/${package_version}"
        rm -rf "${FISSILE_WORK_DIR}/compilation/${package_version}/compiled"
        tar xf "${archive}" -C "${FISSILE_WORK_DIR}/compilation/${package_version}"
    done

    echo "Compiled packages restored from ${HCF_PACKAGE_COMPILATION_CACHE}"
}

COMMAND=${1:-''}

case ${COMMAND} in
    restore)
        restore;;
    cache)
        cache > "${FISSILE_WORK_DIR}/rsync.log" 2>&1 &;;
    *)
        restore

        echo Please allow a long time for mariadb to compile
        fissile dev compile

        cache > "${FISSILE_WORK_DIR}/rsync.log" 2>&1 &
        ;;
esac

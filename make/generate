#!/bin/sh

set -o errexit -o nounset

GIT_ROOT=${GIT_ROOT:-$(git rev-parse --show-toplevel)}

. ${GIT_ROOT}/make/include/registry
. ${GIT_ROOT}/make/include/versioning

# If you're looking at these quotes and wondering what I was thinking...
# The quotes need to be escaped so echo doesn't consume them, because they need
# to be used in the `docker run` command further on, which already has quotes
# inside quotes... shell really needs a %Q operator or something.

OPTIONS=$(echo \
    --dtr \"${IMAGE_REGISTRY}\" \
    --dtr-org \"${IMAGE_ORG}\" \
    --hcf-prefix \"${IMAGE_PREFIX}\" \
    --hcf-tag \"${DOCKER_APP_VERSION}\" \
    --hcf-version \"${ARTIFACT_VERSION}\" \
    --env-dir \"${ENV_DIR}\"
)

TARGET=${1}

# Blacklist env directories and docker repositories that aren't meant for the target
case ${TARGET} in
  hcp|hcp-instance|hcp-instance-ha)
    if [ `echo ${ENV_DIR} | grep 'settings-dev'` ]; then
      printf "\033[0;1;31mPolitely refusing to use ${ENV_DIR} for hcp settings (did you mean settings-hcp?)\033[0m\n" >&2
      exit 1
    fi
    if [ `echo ${IMAGE_REGISTRY} | grep '\(potato\.helion\.lol\|docker\.helion\.lol\)'` ]; then
      printf "\033[0;1;31mPolitely refusing to use credential protected ${IMAGE_REGISTRY} for hcp (did you mean docker-registry.helion.space?)\033[0m\n" >&2
      exit 1
    fi
    ;;
  aws|aws-spot|aws-proxy|aws-spot-proxy)
    if [ `echo ${ENV_DIR} | grep 'settings-hcp'` ]; then
      printf "\033[0;1;31mPolitely refusing to use ${ENV_DIR} for aws/mpc settings (did you mean settings-dev?)\033[0m\n" >&2
      exit 1
    fi
esac

case ${TARGET} in
    hcp)
        OUTFILE=${OUTFILE:-"hcf-${TARGET}.json"}
        OPTIONS="${OPTIONS} --provider \"${TARGET}\""
        ;;
    hcp-instance|hcp-instance-ha)
        OUTFILE=${OUTFILE:-"hcf-${TARGET}.json"}
        TEMPLATE="hcp/hcf-${TARGET}.template.json"
        OPTIONS="${OPTIONS} --provider hcp-instance --instance-definition-template ${TEMPLATE}"
        ;;
    *)
        OUTFILE=${OUTFILE:-"hcf-${TARGET}.tf.json"}
        OPTIONS="${OPTIONS} --provider tf:$(echo ${TARGET} | sed -e 's@-spot@@' | tr - :)"
        ;;
esac

# Assemble AWS/MPC terraform from pieces, with variants overriding base definitions.
case ${TARGET} in
    mpc)
	cp terraform/mpc.tf ${GIT_ROOT}/
	;;
    aws*)
	cp terraform/aws/common/*.tf ${GIT_ROOT}/
	;;
esac
case ${TARGET} in
    aws-spot)
	cp terraform/aws/spot/*.tf ${GIT_ROOT}/
	;;
    aws-proxy)
	cp terraform/aws/proxy/*.tf ${GIT_ROOT}/
	;;
    aws-spot-proxy)
	cp terraform/aws/spot/*.tf       ${GIT_ROOT}/
	cp terraform/aws/proxy/*.tf      ${GIT_ROOT}/
	cp terraform/aws/spot-proxy/*.tf ${GIT_ROOT}/
	;;
esac

DOCKER_RUNTIME=${DOCKER_RUNTIME:-'helioncf/hcf-pipeline-ruby-bosh'}
ROLE_MANIFEST=${ROLE_MANIFEST:-'container-host-files/etc/hcf/config/role-manifest.yml'}

docker run \
       --rm \
       --volume ${GIT_ROOT}:${GIT_ROOT} \
       --workdir ${GIT_ROOT} \
       --entrypoint bash \
       ${DOCKER_RUNTIME} -l -c "RBENV_VERSION=2.2.3 bin/rm-transformer.rb ${OPTIONS} ${ROLE_MANIFEST}" \
    > ${OUTFILE}

for num in 3 6 ; do
    printf "%bGenerating %s%b\n" "\033[0;32m" "${OUTFILE%.*}.${num}.json" "\033[0m"
    docker run \
        --rm \
        --volume ${GIT_ROOT}:${GIT_ROOT} \
        --workdir ${GIT_ROOT} \
        --entrypoint bash \
        ${DOCKER_RUNTIME} -l -c "RBENV_VERSION=2.2.3 ruby bin/rm-transformer/diego-cell-count-modifier.rb ${num} ${OUTFILE}" \
    > ${OUTFILE%.*}.${num}.json
done

printf "%bGenerated %s%b\n" "\033[0;32m" "${OUTFILE}" "\033[0m"
